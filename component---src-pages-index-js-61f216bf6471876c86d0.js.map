{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","IndexPage","a","createElement","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","key","json","shape","Header","siteTitle","react_default","style","background","Container","padding","marginBottom","gatsby_browser_entry","color","to","Layout","_ref2","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","header","Grid","relaxed","stackable","Column","mobile","tablet","computer","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-61f216bf6471876c86d0.js","sourcesContent":["import React from 'react'\n\nimport { Button } from 'semantic-ui-react'\nimport Layout from '../components/layout'\n\nconst IndexPage = () => (\n  <Layout>\n    <h2>\n      Hello!\n    </h2>\n\n    <p>\n      We're a creative technology consultancy based in Croydon.\n    </p>\n\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Container } from 'semantic-ui-react'\n\nconst Header = ({ siteTitle }) => (\n  <div style={{ background: 'grey' }}>\n    <Container>\n      <h1 style={{ padding: '1rem 0', marginBottom: '2rem' }}>\n        <Link style={{ color: 'white' }} to=\"/\">\n          {siteTitle}\n        </Link>\n      </h1>\n    </Container>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Container, Grid, Menu } from 'semantic-ui-react'\n\nimport Header from './header'\n\nimport 'semantic-ui-less/semantic.less'\nimport { Link } from 'gatsby'\n\nconst LinkedItem = ({ children, ...props }) => (\n  <Menu.Item as={Link} activeClassName='active' {...props}>{children}</Menu.Item>\n)\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n\n        <Header siteTitle={data.site.siteMetadata.title} />\n\n        <Container>\n          <Grid relaxed stackable>\n\n            <Grid.Column mobile={16} tablet={8} computer={8}>\n              {children}\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}